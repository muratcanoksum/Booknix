@using Booknix.Shared.Helpers
@model List<Booknix.Domain.Entities.Worker>

@Html.AntiForgeryToken()
<input type="hidden" id="location-id" value="@ViewBag.LocationId" />

<div class="flex justify-between items-center mb-4">
    <h3 class="text-lg font-semibold text-gray-800">
        <i class="fa-solid fa-users text-indigo-600 mr-1"></i> Çalışan Listesi
    </h3>
    <button id="show-add-worker-modal"
            class="bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded text-sm inline-flex items-center gap-2">
        <i class="fa-solid fa-plus"></i> Yeni Çalışan
    </button>
</div>

<!-- Uyarı kutuları -->
<div id="worker-alert-success" class="hidden mb-4 px-4 py-3 rounded border border-green-300 bg-green-50 text-green-700 text-sm shadow-sm">
    <i class="fas fa-check-circle mr-2"></i> <span id="worker-alert-success-text"></span>
</div>

<div id="worker-alert-error" class="hidden mb-4 px-4 py-3 rounded border border-red-300 bg-red-50 text-red-700 text-sm shadow-sm">
    <i class="fas fa-exclamation-circle mr-2"></i> <span id="worker-alert-error-text"></span>
</div>

<div class="bg-white shadow rounded-lg overflow-hidden">
    <table class="min-w-full divide-y divide-gray-200 text-sm">
        <thead class="bg-gray-50">
            <tr>
                <th class="px-6 py-3 text-left font-semibold text-gray-600">Ad Soyad</th>
                <th class="px-6 py-3 text-left font-semibold text-gray-600">E-Posta</th>
                <th class="px-6 py-3 text-left font-semibold text-gray-600">Pozisyon</th>
                <th class="px-6 py-3 text-right font-semibold text-gray-600">İşlemler</th>
            </tr>
        </thead>
        <tbody class="divide-y divide-gray-100">
            @if (Model != null && Model.Any())
            {
                foreach (var worker in Model)
                {
                    <tr class="hover:bg-gray-50">
                        <td class="px-6 py-4 text-gray-800">@worker.User.FullName</td>
                        <td class="px-6 py-4 text-gray-800">@worker.User.Email</td>
                        <td class="px-6 py-4 text-gray-800">@EnumHelper.GetDisplayName(worker.RoleInLocation)</td>
                        <td class="px-6 py-4 text-right">
                            <button class="delete-worker-btn px-3 py-1 bg-red-100 text-red-800 rounded hover:bg-red-200 transition"
                                    data-id="@worker.Id">
                                Sil
                            </button>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="4" class="px-6 py-4 text-center text-gray-500">Bu lokasyona ait çalışan bulunmamaktadır.</td>
                </tr>
            }
        </tbody>
    </table>
</div>

<!-- Çalışan Ekle Modal -->
<div id="add-worker-modal" class="fixed inset-0 bg-black bg-opacity-50 hidden items-center justify-center z-50">
    <div class="bg-white rounded-lg shadow-lg w-full max-w-md p-6 text-center">
        <h2 class="text-lg font-semibold text-gray-800 mb-4">Yeni Çalışan Ekle</h2>
        <form id="worker-add-form" class="space-y-4">
            <input type="hidden" name="LocationId" value="@ViewBag.LocationId" />
            <div class="text-left">
                <label class="block text-sm mb-1">Ad Soyad</label>
                <input type="text" name="FullName" class="w-full border rounded px-3 py-2" required />
            </div>
            <div class="text-left">
                <label class="block text-sm mb-1">E-Posta</label>
                <input type="email" name="Email" class="w-full border rounded px-3 py-2" required />
            </div>
            <div class="text-left">
                <label class="block text-sm mb-1">Pozisyon</label>
                <select name="RoleInLocation" class="w-full border rounded px-3 py-2" required>
                    <option value="" disabled selected>Bir pozisyon seçin</option>
                    <option value="LocationAdmin">Yönetici</option>
                    <option value="LocationEmployee">Çalışan</option>
                </select>
            </div>
            <div class="flex justify-center gap-3 mt-4">
                <button type="button" onclick="hideAddWorkerModal()" class="px-4 py-2 bg-gray-100 text-gray-700 hover:bg-gray-200 rounded">Vazgeç</button>
                <button type="submit" class="px-4 py-2 bg-blue-600 text-white hover:bg-blue-700 rounded">Kaydet</button>
            </div>
        </form>
    </div>
</div>

<!-- Silme Onay Modali -->
<div id="confirm-delete-modal" class="fixed inset-0 bg-black bg-opacity-50 hidden items-center justify-center z-50">
    <div class="bg-white rounded-lg shadow-lg p-6 max-w-md w-full text-center">
        <h2 class="text-lg font-semibold text-gray-800 mb-4">Çalışanı Sil</h2>
        <p class="text-sm text-gray-600 mb-6">Bu çalışanı silmek istediğinize emin misiniz?</p>
        <div class="flex justify-center gap-4">
            <button id="confirm-delete-yes" class="bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded">Evet</button>
            <button id="confirm-delete-no" class="bg-gray-200 hover:bg-gray-300 text-gray-800 px-4 py-2 rounded">İptal</button>
        </div>
    </div>
</div>

<script>
    window.alertTimersWorker = window.alertTimersWorker || {};
    window.pendingDeleteId = window.pendingDeleteId || null;

    function setTimeoutAlert(idSelector, message = "", timeInSeconds = 5) {
        const duration = timeInSeconds * 1000;
        const $el = $(idSelector);

        if (alertTimersWorker[idSelector]) {
            clearTimeout(alertTimersWorker[idSelector]);
            delete alertTimersWorker[idSelector];
        }

        if (message) {
            $el.find("span").text(message);
        }

        $el.removeClass("hidden").hide().fadeIn("slow");

        alertTimersWorker[idSelector] = setTimeout(() => {
            $el.fadeOut("slow", function () {
                $(this).addClass("hidden").removeAttr("style").find("span").text("");
            });
            delete alertTimersWorker[idSelector];
        }, duration);
    }

    function showAddWorkerModal() {
        $("#add-worker-modal").removeClass("hidden").addClass("flex");
    }

    function hideAddWorkerModal() {
        $("#add-worker-modal").addClass("hidden").removeClass("flex");
    }

    function showDeleteModal(workerId) {
        pendingDeleteId = workerId;
        $("#confirm-delete-modal").removeClass("hidden").addClass("flex");
    }

    function hideDeleteModal() {
        pendingDeleteId = null;
        $("#confirm-delete-modal").addClass("hidden").removeClass("flex");
    }

    async function loadWorkers(locationId) {
        const $target = $("#location-operation-panel");
        const $loader = $("#location-operation-loader");

        $loader.text("Çalışanlar yükleniyor...");
        $target.empty();

        try {
            const html = await $.get(`/Admin/GetWorkersByLocation/${locationId}`);
            $target.html(html);
            $loader.text("");
        } catch {
            $loader.text("Çalışanlar yüklenemedi.");
        }
    }

    $(document).on("click", "#show-add-worker-modal", showAddWorkerModal);
    $(document).on("click", ".delete-worker-btn", function () {
        showDeleteModal($(this).data("id"));
    });
    $(document).on("click", "#confirm-delete-no", hideDeleteModal);
    $(document).off("click", "#confirm-delete-yes").on("click", "#confirm-delete-yes", async function () {
        const token = $('input[name="__RequestVerificationToken"]').val();
        const locationId = $("#location-id").val();

        try {
            await $.ajax({
                type: "POST",
                url: `/Admin/Worker/Delete`,
                data: { id: pendingDeleteId },
                headers: { "RequestVerificationToken": token }
            });

            await loadWorkers(locationId);
            setTimeoutAlert("#worker-alert-success", "Çalışan başarıyla silindi.", 5);
            document.querySelector("#worker-alert-success").scrollIntoView({ behavior: "smooth", block: "center" });
        } catch {
            setTimeoutAlert("#worker-alert-error", "Çalışan silinemedi.", 5);
            document.querySelector("#worker-alert-error").scrollIntoView({ behavior: "smooth", block: "center" });

        }

        hideDeleteModal();
    });

    $(document).on("submit", "#worker-add-form", async function (e) {
        e.preventDefault();

        const token = $('input[name="__RequestVerificationToken"]').val();
        const locationId = $("#location-id").val();
        const $form = $(this);

        try {
            const response = await $.ajax({
                type: "POST",
                url: "/Admin/Worker/Create",
                data: $form.serialize(),
                headers: { "RequestVerificationToken": token }
            });

            hideAddWorkerModal();
            $form[0].reset();
            await loadWorkers(locationId);
            setTimeoutAlert("#worker-alert-success", response, 5);
            document.querySelector("#worker-alert-success").scrollIntoView({ behavior: "smooth", block: "center" });
        } catch (xhr) {
            hideAddWorkerModal();
            setTimeoutAlert("#worker-alert-error", xhr.responseText || "Çalışan eklenemedi.");
            document.querySelector("#worker-alert-error").scrollIntoView({ behavior: "smooth", block: "center" });
        }
    });
</script>

