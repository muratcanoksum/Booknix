@model IEnumerable<Booknix.Domain.Entities.Sector>
@{
    ViewData["Title"] = "Sektör Yönetimi";
}

<h1 class="text-2xl font-bold text-gray-800 mb-6">📁 Sektör Yönetimi</h1>

@if (TempData["SectorInfo"] != null)
{
    <div id="sector-info"
         class="mb-3 px-4 py-3 rounded border border-green-300 bg-green-50 text-green-700 text-sm shadow-sm">
        <i class="fas fa-check-circle mr-2"></i> @TempData["SectorInfo"]
    </div>
}

<!-- Hata mesajı kutusu (başta gizli) -->
<div id="error-info" class="hidden mb-6 px-4 py-3 rounded border border-red-300 bg-red-50 text-red-700 text-sm shadow-sm">
    <i class="fas fa-exclamation-circle mr-2"></i> <span id="error-info-text"></span>
</div>

<div class="flex justify-between items-center mb-4">
    <span class="text-sm text-gray-500">Toplam: @Model.Count() sektör</span>
    <a asp-controller="Admin" asp-action="CreateSector"
       class="inline-flex items-center px-4 py-2 bg-indigo-600 text-white text-sm font-medium rounded hover:bg-indigo-700 transition">
        + Yeni Sektör
    </a>
</div>

<div class="bg-white shadow rounded-lg overflow-hidden">
    <table class="min-w-full divide-y divide-gray-200">
        <thead class="bg-gray-50">
            <tr>
                <th class="px-6 py-3 text-left text-sm font-semibold text-gray-600">Adı</th>
                <th class="px-6 py-3 text-right text-sm font-semibold text-gray-600">İşlemler</th>
            </tr>
        </thead>
        <tbody class="divide-y divide-gray-100">
            @foreach (var sector in Model)
            {
                <tr class="hover:bg-gray-50">
                    <td class="px-6 py-4 text-sm text-gray-800">@sector.Name</td>
                    <td class="px-6 py-4 text-sm text-right space-x-2">
                        <a asp-controller="Admin" asp-action="EditSector" asp-route-id="@sector.Id"
                           class="inline-block px-3 py-1 bg-yellow-100 text-yellow-800 rounded hover:bg-yellow-200 transition">
                            Düzenle
                        </a>

                        <button onclick="showDeleteModal('@sector.Id')"
                                class="inline-block px-3 py-1 bg-red-100 text-red-800 rounded hover:bg-red-200 transition">
                            Sil
                        </button>
                    </td>
                </tr>
            }

            @if (!Model.Any())
            {
                <tr>
                    <td colspan="2" class="px-6 py-4 text-sm text-gray-500 text-center">
                        Kayıtlı sektör bulunamadı.
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<!-- Silme Onay Modali -->
<div id="delete-modal" class="fixed inset-0 bg-black bg-opacity-50 hidden items-center justify-center z-50">
    <div class="bg-white rounded-lg shadow-lg w-full max-w-md p-6 text-center">
        <h2 class="text-lg font-semibold text-gray-800 mb-3">
            Sektörü Silmek İstediğinize Emin misiniz?
        </h2>
        <p class="text-sm text-gray-500 mb-6">
            Bu işlem geri alınamaz. Devam etmek istiyor musunuz?
        </p>
        <div class="flex justify-center gap-4">
            <button onclick="hideDeleteModal()"
                    class="px-4 py-2 rounded bg-gray-100 text-gray-700 hover:bg-gray-200 transition">
                Vazgeç
            </button>
            <form id="delete-sector-form" method="post">
                @Html.AntiForgeryToken()
                <input type="hidden" name="id" id="delete-sector-id" />
                <button type="submit"
                        class="px-4 py-2 rounded bg-red-600 text-white hover:bg-red-700 transition">
                    Evet, Sil
                </button>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        window.selectedSectorId = null;

        function showDeleteModal(id) {
            selectedSectorId = id;
            $("#delete-sector-id").val(id);
            $("#delete-modal").removeClass("hidden").addClass("flex");
        }

        function hideDeleteModal() {
            $("#delete-modal").addClass("hidden").removeClass("flex");
        }

        $("#delete-sector-form").submit(function (e) {
            e.preventDefault();

            const token = $(this).find('input[name="__RequestVerificationToken"]').val();

            fetch(`/Admin/Sector/Delete/${selectedSectorId}`, {
                method: 'POST',
                headers: {
                    'RequestVerificationToken': token
                }
            })
                .then(res => {
                    if (res.ok) {
                        window.location.href = "/Admin/Sector";
                    } else {
                        return res.text().then(msg => {
                            $("#error-info-text").text(msg || "Silme işlemi başarısız oldu.");
                            $("#error-info").removeClass("hidden");
                        });
                    }
                })
                .catch(() => {
                    $("#error-info-text").text("Sunucuya ulaşılamadı. Lütfen daha sonra tekrar deneyin.");
                    $("#error-info").removeClass("hidden");
                })
                .finally(() => hideDeleteModal());
        });

        // Otomatik alert gizleme
        setTimeout(() => {
            $("#sector-info").fadeOut("slow", function () { $(this).remove(); });
            $("#error-info").fadeOut("slow", function () {
                $(this).addClass("hidden").find("span").text("");
            });
        }, 7000);
    </script>
}
